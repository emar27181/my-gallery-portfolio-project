---
---

<nav class="navbar">
  <div class="navbar-content">
    <!-- Logo/Title -->
    <div class="navbar-brand">
      <h1 class="navbar-title">Portfolio Gallery</h1>
    </div>
    
    
    <!-- Theme Toggle & Hamburger Menu -->
    <div class="navbar-actions">
      <button class="theme-toggle" id="navbar-theme-toggle" aria-label="Toggle dark mode">
        <svg class="theme-icon sun-icon" id="navbar-sun-icon" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
        </svg>
        <svg class="theme-icon moon-icon hidden" id="navbar-moon-icon" fill="currentColor" viewBox="0 0 20 20">
          <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
        </svg>
      </button>
      
      <button class="hamburger-menu" id="hamburger-menu" aria-label="Open menu">
        <svg fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
        </svg>
      </button>
    </div>
  </div>
</nav>

<!-- Mobile Menu Overlay -->
<div class="mobile-menu" id="mobile-menu">
  <div class="mobile-menu-content">
    <div class="mobile-menu-header">
      <h2 class="mobile-menu-title">Menu</h2>
      <button class="mobile-menu-close" id="mobile-menu-close" aria-label="Close menu">
        <svg fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
      </button>
    </div>
    
    <div class="mobile-menu-items">
      <a href="https://emar27181-resume.netlify.app/" target="_blank" class="mobile-menu-item">
        <svg fill="currentColor" viewBox="0 0 20 20" class="menu-icon">
          <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
        </svg>
        Main Portfolio
        <svg fill="currentColor" viewBox="0 0 20 20" class="external-icon">
          <path fill-rule="evenodd" d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0V6.75a.75.75 0 00-.75-.75H7.75a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z" clip-rule="evenodd"></path>
        </svg>
      </a>
    </div>
  </div>
</nav>

<script>
  function initNavbarTheme() {
    // Get saved theme or default to light
    const savedTheme = localStorage.getItem('theme') || 'light';
    
    // Apply theme to document
    document.documentElement.setAttribute('data-theme', savedTheme);
    
    // Update button icons
    updateNavbarThemeIcons(savedTheme);
  }
  
  function updateNavbarThemeIcons(theme) {
    const sunIcon = document.getElementById('navbar-sun-icon');
    const moonIcon = document.getElementById('navbar-moon-icon');
    
    if (sunIcon && moonIcon) {
      if (theme === 'dark') {
        sunIcon.classList.add('hidden');
        moonIcon.classList.remove('hidden');
      } else {
        sunIcon.classList.remove('hidden');
        moonIcon.classList.add('hidden');
      }
    }
  }
  
  function toggleNavbarTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    
    // Apply new theme
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    
    // Update icons
    updateNavbarThemeIcons(newTheme);
  }
  
  // Initialize theme when page loads
  document.addEventListener('DOMContentLoaded', () => {
    initNavbarTheme();
    
    // Add click event to toggle button
    const toggleButton = document.getElementById('navbar-theme-toggle');
    if (toggleButton) {
      toggleButton.addEventListener('click', toggleNavbarTheme);
    }
  });
  
  // Initialize immediately if DOM is already ready
  if (document.readyState !== 'loading') {
    initNavbarTheme();
  }
  
  // Mobile menu functionality
  function toggleMobileMenu() {
    const mobileMenu = document.getElementById('mobile-menu');
    if (mobileMenu) {
      const isOpen = mobileMenu.classList.contains('open');
      if (isOpen) {
        mobileMenu.classList.remove('open');
        document.body.style.overflow = '';
      } else {
        mobileMenu.classList.add('open');
        document.body.style.overflow = 'hidden';
      }
    }
  }
  
  function closeMobileMenu() {
    const mobileMenu = document.getElementById('mobile-menu');
    if (mobileMenu) {
      mobileMenu.classList.remove('open');
      document.body.style.overflow = '';
    }
  }
  
  // Initialize mobile menu when page loads
  document.addEventListener('DOMContentLoaded', () => {
    // Hamburger menu button
    const hamburgerButton = document.getElementById('hamburger-menu');
    if (hamburgerButton) {
      hamburgerButton.addEventListener('click', toggleMobileMenu);
    }
    
    // Close button
    const closeButton = document.getElementById('mobile-menu-close');
    if (closeButton) {
      closeButton.addEventListener('click', closeMobileMenu);
    }
    
    // Close menu when clicking outside
    const mobileMenu = document.getElementById('mobile-menu');
    if (mobileMenu) {
      mobileMenu.addEventListener('click', (e) => {
        if (e.target === mobileMenu) {
          closeMobileMenu();
        }
      });
    }
    
    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeMobileMenu();
      }
    });
  });
</script>